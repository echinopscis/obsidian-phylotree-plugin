name: Release Obsidian plugin

on:
  push:
    tags:
      - '*'

env:
  PLUGIN_NAME: wikidata-sidebar-plugin

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          cache: 'yarn'
      - run: yarn install --frozen-lockfile

      - name: Build
        id: build
        run: |
          yarn build
          mkdir ${{ env.PLUGIN_NAME }}
          cp main.js manifest.json styles.css ${{ env.PLUGIN_NAME }}
          zip -r ${{ env.PLUGIN_NAME }}.zip ${{ env.PLUGIN_NAME }}
          ls
          echo "::set-output name=tag_name::$(git tag --sort version:refname | tail -n 1)"

      # - name: Create Release
      #   id: create_release
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     VERSION: ${{ github.ref }}
      #   with:
      #     tag_name: ${{ github.ref }}
      #     release_name: ${{ github.ref }}
      #     draft: false
      #     prerelease: false

      - name: Update release with built artifacts (./${{ env.PLUGIN_NAME }}.zip)
        uses: softprops/action-gh-release@v1
        with:
          files: ./${{ env.PLUGIN_NAME }}.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update release with built artifacts (main.js)
        uses: softprops/action-gh-release@v1
        with:
          files: ./main.js
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update release with built artifacts (manifest.json)
        uses: softprops/action-gh-release@v1
        with:
          files: ./manifest.json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update release with built artifacts (styles.css)
        uses: softprops/action-gh-release@v1
        with:
          files: ./styles.css
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
